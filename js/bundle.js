!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";function it(description,contents){console.log('\n\n"It '+description+'"'),contents()}function expect(target){return{toBe:function(expectation){return target===expectation?(console.log("\n     %cPASSED","color:green;","Expected",target,"to be",expectation),!0):(console.log("\n     %cFAILED","color:red;","Expected",target,"to be",expectation),!1)}}}function Dog(options){options=options||{},this.color=options.color,void 0===options.hungry?this.hungry=!0:this.hungry=options.hungry}function Human(options){options=options||{},this.pet=function(dog){dog.status="happy"},this.feed=function(dog){dog.hungry=!1},void 0===options.cool?this.cool=!1:this.cool=options.cool}Dog.prototype.color="black",Dog.prototype.hungry=!0,Dog.prototype.status="normal";var kepler=new Dog({color:"red",hungry:!1}),moonshine=new Dog({color:"blue-red"}),atticus=new Dog,dan=new Human,faith=new Human({cool:!0});it("should make Kepler happy when Dan pets him",function(){expect(kepler.status).toBe("normal"),dan.pet(kepler),expect(kepler.status).toBe("happy")}),it("should make Kepler red",function(){expect(kepler.color).toBe("red")}),it("should be make Moonshine hungry and Kepler not hungry",function(){expect(moonshine.hungry).toBe(!0),expect(kepler.hungry).toBe(!1)}),it("should make Moonshine no longer hungry when you feed him",function(){faith.feed(moonshine),expect(moonshine.hungry).toBe(!1)}),it("should not affect Atticus and Moonshine's owner properties when setting Dan as Kepler's owner ",function(){kepler.owner=dan,expect(moonshine.owner).toBe(void 0),expect(atticus.owner).toBe(void 0)}),it("should make Faith cool and Dan not cool",function(){kepler.owner=dan,expect(faith.cool).toBe(!0),expect(dan.cool).toBe(!1)})},{}]},{},[1]);
